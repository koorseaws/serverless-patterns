"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.handler = void 0;
const scheduler_1 = require("./utils/scheduler");
const handler = async (event) => {
    console.log(`Event: ${JSON.stringify(event, null, 2)}`);
    const schedulerInput = {
        Name: event.eventName + "-" + event.id,
        GroupName: event.eventType,
        ClientToken: event.clientToken
    };
    const result = await (0, scheduler_1.deleteSchdule)(schedulerInput)
        .then((result) => {
        if (result.$metadata.httpStatusCode == 200) {
            return {
                statusCode: 200,
                body: JSON.stringify({
                    statusMessage: result.$metadata,
                    message: 'Message Deleted!',
                }),
            };
        }
        else {
            return {
                statusCode: result.$metadata.httpStatusCode || 400,
                body: JSON.stringify({
                    statusMessage: result.$metadata,
                    statusCode: result.$metadata.httpStatusCode,
                }),
            };
        }
    })
        .catch((err) => {
        return {
            statusCode: 400,
            body: JSON.stringify({
                statusMessage: err,
                statusCode: 404,
            }),
        };
    });
};
exports.handler = handler;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXZlbnRfc2NoZWR1bGVfaGFuZGxlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImV2ZW50X3NjaGVkdWxlX2hhbmRsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQ0EsaURBQWtEO0FBRTNDLE1BQU0sT0FBTyxHQUFHLEtBQUssRUFBRSxLQUFxQixFQUFnQixFQUFFO0lBQ25FLE9BQU8sQ0FBQyxHQUFHLENBQUMsVUFBVSxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBRXhELE1BQU0sY0FBYyxHQUFRO1FBQzFCLElBQUksRUFBRSxLQUFLLENBQUMsU0FBUyxHQUFHLEdBQUcsR0FBRyxLQUFLLENBQUMsRUFBRTtRQUN0QyxTQUFTLEVBQUUsS0FBSyxDQUFDLFNBQVM7UUFDMUIsV0FBVyxFQUFFLEtBQUssQ0FBQyxXQUFXO0tBQy9CLENBQUM7SUFDRixNQUFNLE1BQU0sR0FBRyxNQUFNLElBQUEseUJBQWEsRUFBQyxjQUFjLENBQUM7U0FDL0MsSUFBSSxDQUFDLENBQUMsTUFBTSxFQUFFLEVBQUU7UUFDZixJQUFJLE1BQU0sQ0FBQyxTQUFTLENBQUMsY0FBYyxJQUFJLEdBQUcsRUFBRTtZQUMxQyxPQUFPO2dCQUNMLFVBQVUsRUFBRSxHQUFHO2dCQUNmLElBQUksRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDO29CQUNuQixhQUFhLEVBQUUsTUFBTSxDQUFDLFNBQVM7b0JBQy9CLE9BQU8sRUFBRSxrQkFBa0I7aUJBQzVCLENBQUM7YUFDSCxDQUFDO1NBQ0g7YUFBTTtZQUNMLE9BQU87Z0JBQ0wsVUFBVSxFQUFFLE1BQU0sQ0FBQyxTQUFTLENBQUMsY0FBYyxJQUFJLEdBQUc7Z0JBQ2xELElBQUksRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDO29CQUNuQixhQUFhLEVBQUUsTUFBTSxDQUFDLFNBQVM7b0JBQy9CLFVBQVUsRUFBRSxNQUFNLENBQUMsU0FBUyxDQUFDLGNBQWM7aUJBQzVDLENBQUM7YUFDSCxDQUFDO1NBQ0g7SUFDSCxDQUFDLENBQUM7U0FDRCxLQUFLLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRTtRQUNiLE9BQU87WUFDTCxVQUFVLEVBQUUsR0FBRztZQUNmLElBQUksRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDO2dCQUNuQixhQUFhLEVBQUUsR0FBRztnQkFDbEIsVUFBVSxFQUFFLEdBQUc7YUFDaEIsQ0FBQztTQUNILENBQUE7SUFDSCxDQUFDLENBQUMsQ0FBQTtBQUNOLENBQUMsQ0FBQTtBQXJDWSxRQUFBLE9BQU8sV0FxQ25CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU2NoZWR1bGVkRXZlbnQgfSBmcm9tIFwiLi9zY2hlbWFzL2lucHV0LXJlcXVlc3Qtc2NoZW1hXCI7XG5pbXBvcnQgeyBkZWxldGVTY2hkdWxlIH0gZnJvbSBcIi4vdXRpbHMvc2NoZWR1bGVyXCI7XG5cbmV4cG9ydCBjb25zdCBoYW5kbGVyID0gYXN5bmMgKGV2ZW50OiBTY2hlZHVsZWRFdmVudCk6IFByb21pc2U8YW55PiA9PiB7XG4gIGNvbnNvbGUubG9nKGBFdmVudDogJHtKU09OLnN0cmluZ2lmeShldmVudCwgbnVsbCwgMil9YCk7XG5cbiAgY29uc3Qgc2NoZWR1bGVySW5wdXQ6IGFueSA9IHtcbiAgICBOYW1lOiBldmVudC5ldmVudE5hbWUgKyBcIi1cIiArIGV2ZW50LmlkLFxuICAgIEdyb3VwTmFtZTogZXZlbnQuZXZlbnRUeXBlLFxuICAgIENsaWVudFRva2VuOiBldmVudC5jbGllbnRUb2tlblxuICB9O1xuICBjb25zdCByZXN1bHQgPSBhd2FpdCBkZWxldGVTY2hkdWxlKHNjaGVkdWxlcklucHV0KVxuICAgIC50aGVuKChyZXN1bHQpID0+IHtcbiAgICAgIGlmIChyZXN1bHQuJG1ldGFkYXRhLmh0dHBTdGF0dXNDb2RlID09IDIwMCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHN0YXR1c0NvZGU6IDIwMCxcbiAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgICBzdGF0dXNNZXNzYWdlOiByZXN1bHQuJG1ldGFkYXRhLFxuICAgICAgICAgICAgbWVzc2FnZTogJ01lc3NhZ2UgRGVsZXRlZCEnLFxuICAgICAgICAgIH0pLFxuICAgICAgICB9O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBzdGF0dXNDb2RlOiByZXN1bHQuJG1ldGFkYXRhLmh0dHBTdGF0dXNDb2RlIHx8IDQwMCxcbiAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgICBzdGF0dXNNZXNzYWdlOiByZXN1bHQuJG1ldGFkYXRhLFxuICAgICAgICAgICAgc3RhdHVzQ29kZTogcmVzdWx0LiRtZXRhZGF0YS5odHRwU3RhdHVzQ29kZSxcbiAgICAgICAgICB9KSxcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICB9KVxuICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBzdGF0dXNDb2RlOiA0MDAsXG4gICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICBzdGF0dXNNZXNzYWdlOiBlcnIsXG4gICAgICAgICAgc3RhdHVzQ29kZTogNDA0LFxuICAgICAgICB9KSxcbiAgICAgIH1cbiAgICB9KVxufSJdfQ==